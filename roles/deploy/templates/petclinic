#!/bin/bash

### BEGIN INIT INFO
# Provides:          petclinic
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Should-Start:      $named autofs
# Default-Start:     2 3 4 5
# Default-Stop:
# Short-Description: petclinic
# Description:       petclinic
### END INIT INFO

# chkconfig: - 99 10
### BEGIN INIT INFO
# Provides:          scriptname
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start daemon at boot time
# Description:       Enable service provided by daemon.
### END INIT INFO

SERVICE_NAME={{ APP_NAME }}
BASE_DIR={{ DEPLOY_PATH }}

ENABLE_STACKTRACE={{ IS_STACKTRACE_ENABLE }}
APM_SERVER={{ APM_SERVER }}

TAG_APPNAME={{ TAG_APPNAME }}
TAG_NAME=petclinic-appserver-1


if $ENABLE_STACKTRACE
then
START_COMMAND="nohup java -javaagent:/opt/sfagent/sftrace/java/sftrace-java-agent.jar -Delastic.apm.enable_log_correlation=true -jar $BASE_DIR/$SERVICE_NAME.jar --spring.profiles.active=mysql"
else
START_COMMAND="nohup java -jar $BASE_DIR/$SERVICE_NAME.jar --spring.profiles.active=mysql"
fi

PID_FILE=$BASE_DIR/$SERVICE_NAME.pid
LOG_DIR={{ LOG_PATH }}
 
start() {
  PID=`$START_COMMAND > $LOG_DIR/init.log 2>$LOG_DIR/init.error.log & echo $!`
}
 
case "$1" in
start)
    if [ -f $PID_FILE ]; then
        PID=`cat $PID_FILE`
        if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
            start
        else
            echo "$SERVICE_NAME is already running ... [$PID]"
            exit 0
        fi
    else
        start
    fi
 
    if [ -z $PID ]; then
        echo "Failed starting $SERVICE_NAME"
        exit 1
    else
        echo $PID > $PID_FILE
        echo "$SERVICE_NAME started ...[$PID]"
        exit 0
    fi
;;
status)
    if [ -f $PID_FILE ]; then
        PID=`cat $PID_FILE`
        if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
            echo "$SERVICE_NAME not running (process dead but PID file exists)"
            exit 1
        else
            echo "$SERVICE_NAME running... [$PID]"
            exit 0
        fi
    else
        echo "$SERVICE_NAME not running..."
        exit 0
    fi
;;
stop)
    if [ -f $PID_FILE ]; then
        PID=`cat $PID_FILE`
        if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
            echo "$SERVICE_NAME not running (process dead but PID file exists)"
            rm -f $PID_FILE
            exit 1
        else
            PID=`cat $PID_FILE`
            kill -term $PID
            echo "$SERVICE_NAME stopped... [$PID]"
            rm -f $PID_FILE
            exit 0
        fi
    else
        echo "$SERVICE_NAME not running... (PID not found)"
        exit 0
    fi
;;
restart)
    $0 stop
    $0 start
;;
*)
    echo "Usage: $0 {status|start|stop|restart}"
    exit 0
esac
